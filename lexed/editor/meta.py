from abc import ABC


BareException = Exception


class EditorMeta(ABC):
    def __init__(self):
        self.window = None
        self.config = None
        self.app = None
        self.reset_needed = False
        self.text_entered = False
        self.header = 2
        self.row_size = 0
        self.print_at_row = 0
        self.lines = None
        self.current_num = 1
        self.prev_line = 0
        self.save_path = ''
        self.saved_since_edit = True
        self.undo_type = None
        self.undo_list = []
        self.undo_text_que = []
        self.undo_state_que = []
        self.undo_state = []
        self.undo_mark_que = []
        self.undo_mark = []
        self.undo_select = []
        self.undo_select_que = []
        self.program_message = ''
        self.continue_up = 0
        self.continue_down = 0
        self.continue_left = 0
        self.continue_right = 0
        self.last_search = ''
        self.time = None
        self.old_time = None
        self.current_line = None
        self.status = {}

    def print_current_line(self): ...

    def formatted_comments(self, text): ...

    def print_syntax(self, temp_list, x=6, y=0, collapsed=False, entry_line=False): ...

    def new_delete(self, start, end): ...

    @staticmethod
    def item_member(_list, _string): ...

    def error_test(self, number_of_line): ...

    def syntax_visible(self): ...

    def syntax_split_screen(self): ...

    def update_que(self, the_type='UNKNOWN operation'): ...

    def update_undo(self): ...

    def get_selected(self): ...

    def reset_line(self, force=False): ...

    def delete(self, pos, syntax_needed=True): ...

    def get_confirmation(self, text=' Are you sure? (y/n) ', any_key=False): ...

    @staticmethod
    def get_args(text_string, break_char=" ", separator=" ", strip_spaces=True): ...

    def status_message(self, text, number, update_lines=False): ...

    def delete_lines(self, my_text): ...

    @staticmethod
    def consecutive_numbers(num_list): ...

    def insert(self, pos, text='', paste_operation=False): ...

    def split_line(self, pos, first_part, second_part): ...

    def combine_lines(self, pos, first_part, second_part): ...

    def new_doc(self): ...

    def load(self, file_path, read_only=False): ...

    def save(self, file_path=''): ...

    def print_previous_lines(self): ...

    def print_next_line(self): ...

    def move_up(self): ...

    def move_down(self): ...

    def move_left(self): ...

    def move_right(self): ...

    def page_up(self): ...

    def page_down(self): ...

    def print_header(self): ...

    def debug_visible(self): ...

    def add_character(self, char): ...

    def key_backspace(self): ...

    def command_match(self, text_string, command, alt="<@>_foobar_", protect_needed=True): ...

    def print_command(self): ...

    def return_key(self): ...

    def split_screen(self): ...

    def mark(self, text): ...

    def mark_items(self, _type): ...

    def save_as(self, the_path): ...

    def toggle_split_screen(self, text): ...

    def show_hide(self, text): ...

    def toggle_syntax(self, text): ...

    def toggle_whitespace(self, text): ...

    def toggle_tabs(self, text): ...

    def find(self, text): ...

    def unmark(self, text): ...

    def unmark_all(self): ...

    def goto(self, text): ...

    def comment(self, text): ...

    def uncomment(self, text): ...

    def indent(self, text): ...

    def unindent(self, text): ...

    def load_command(self, text): ...

    def run(self): ...

    def default_colors(self): ...

    def replace_text(self, text): ...

    def undo(self): ...

    def run_editor(self): ...

    def deselect(self, text): ...

    def deselect_all(self): ...

    def select_up(self, text): ...

    def select_down(self, text): ...

    def select(self, text): ...

    def invert_selection(self): ...

    def select_items(self, _type): ...

    def new_paste(self, clipboard, pos): ...

    def copy(self, text, select_only=False): ...

    def paste(self, text): ...

    def cut(self, text): ...
